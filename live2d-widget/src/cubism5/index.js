import{LAppDelegate}from"@demo/lappdelegate.js";import{LAppSubdelegate}from"@demo/lappsubdelegate.js";import*as LAppDefine from"@demo/lappdefine.js";import{LAppModel}from"@demo/lappmodel.js";import{LAppPal}from"@demo/lapppal";import logger from"../logger.js";LAppPal.printMessage=()=>{};class AppSubdelegate extends LAppSubdelegate{initialize(e){if(!this._glManager.initialize(e))return!1;this._canvas=e,"auto"===LAppDefine.CanvasSize?this.resizeCanvas():(e.width=LAppDefine.CanvasSize.width,e.height=LAppDefine.CanvasSize.height),this._textureManager.setGlManager(this._glManager);const t=this._glManager.getGl();return this._frameBuffer||(this._frameBuffer=t.getParameter(t.FRAMEBUFFER_BINDING)),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),this._view.initialize(this),this._view._gear={render:()=>{},isHit:()=>{},release:()=>{}},this._view._back={render:()=>{},release:()=>{}},this._live2dManager._subdelegate=this,this._resizeObserver=new window.ResizeObserver((e,t)=>this.resizeObserverCallback.call(this,e,t)),this._resizeObserver.observe(this._canvas),!0}onResize(){this.resizeCanvas(),this._view.initialize(this)}update(){if(this._glManager.getGl().isContextLost())return;this._needResize&&(this.onResize(),this._needResize=!1);const e=this._glManager.getGl();e.clearColor(0,0,0,0),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.clearDepth(1),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA),this._view.render()}}export class AppDelegate extends LAppDelegate{run(){const e=()=>{LAppPal.updateTime();for(let e=0;e<this._subdelegates.getSize();e++)this._subdelegates.at(e).update();this._drawFrameId=window.requestAnimationFrame(e)};e()}stop(){this._drawFrameId&&(window.cancelAnimationFrame(this._drawFrameId),this._drawFrameId=null)}release(){this.stop(),this.releaseEventListener(),this._subdelegates.clear(),this._cubismOption=null}transformOffset(e){const t=this._subdelegates.at(0),s=t.getCanvas().getBoundingClientRect(),i=e.pageX-s.left,a=e.pageY-s.top,n=i*window.devicePixelRatio,r=a*window.devicePixelRatio;return{x:t._view.transformViewX(n),y:t._view.transformViewY(r)}}onMouseMove(e){const t=this._subdelegates.at(0).getLive2DManager(),{x:s,y:i}=this.transformOffset(e),a=t._models.at(0);t.onDrag(s,i),t.onTap(s,i),a.hitTest(LAppDefine.HitAreaNameBody,s,i)&&window.dispatchEvent(new Event("live2d:hoverbody"))}onMouseEnd(e){const t=this._subdelegates.at(0).getLive2DManager(),{x:s,y:i}=this.transformOffset(e);t.onDrag(0,0),t.onTap(s,i)}onTap(e){const t=this._subdelegates.at(0).getLive2DManager(),{x:s,y:i}=this.transformOffset(e);t._models.at(0).hitTest(LAppDefine.HitAreaNameBody,s,i)&&window.dispatchEvent(new Event("live2d:tapbody"))}initializeEventListener(){this.mouseMoveEventListener=this.onMouseMove.bind(this),this.mouseEndedEventListener=this.onMouseEnd.bind(this),this.tapEventListener=this.onTap.bind(this),document.addEventListener("mousemove",this.mouseMoveEventListener,{passive:!0}),document.addEventListener("mouseout",this.mouseEndedEventListener,{passive:!0}),document.addEventListener("pointerdown",this.tapEventListener,{passive:!0})}releaseEventListener(){document.removeEventListener("mousemove",this.mouseMoveEventListener,{passive:!0}),this.mouseMoveEventListener=null,document.removeEventListener("mouseout",this.mouseEndedEventListener,{passive:!0}),this.mouseEndedEventListener=null,document.removeEventListener("pointerdown",this.tapEventListener,{passive:!0})}initializeSubdelegates(){this._canvases.prepareCapacity(LAppDefine.CanvasNum),this._subdelegates.prepareCapacity(LAppDefine.CanvasNum);const e=document.getElementById("live2d");this._canvases.pushBack(e),e.style.width=e.width,e.style.height=e.height;for(let e=0;e<this._canvases.getSize();e++){const t=new AppSubdelegate;if(!t.initialize(this._canvases.at(e)))return void logger.error("Failed to initialize AppSubdelegate");this._subdelegates.pushBack(t)}for(let e=0;e<LAppDefine.CanvasNum;e++)this._subdelegates.at(e).isContextLost()&&logger.error(`The context for Canvas at index ${e} was lost, possibly because the acquisition limit for WebGLRenderingContext was reached.`)}changeModel(e){const t=e.split("/"),s=t.pop(),i=t.join("/")+"/",a=this._subdelegates.at(0).getLive2DManager();a.releaseAllModel();const n=new LAppModel;n.setSubdelegate(a._subdelegate),n.loadAssets(i,s),a._models.pushBack(n)}get subdelegates(){return this._subdelegates}}