import{Live2DFramework}from"./Live2DFramework.js";import LAppModel from"./LAppModel.js";import PlatformManager from"./PlatformManager.js";import LAppDefine from"./LAppDefine.js";import logger from"../logger.js";class LAppLive2DManager{constructor(){this.model=null,this.reloading=!1,Live2D.init(),Live2DFramework.setPlatformManager(new PlatformManager)}getModel(){return this.model}releaseModel(e){this.model&&(this.model.release(e),this.model=null)}async changeModel(e,t){return new Promise((o,i)=>{if(this.reloading)return;this.reloading=!0;const r=this.model,a=new LAppModel;a.load(e,t,()=>{r&&r.release(e),this.model=a,this.reloading=!1,o()})})}async changeModelWithJSON(e,t,o){if(this.reloading)return;this.reloading=!0;const i=this.model,r=new LAppModel;await r.loadModelSetting(t,o),i&&i.release(e),this.model=r,this.reloading=!1}setDrag(e,t){this.model&&this.model.setDrag(e,t)}maxScaleEvent(){logger.trace("Max scale event."),this.model&&this.model.startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_IN,LAppDefine.PRIORITY_NORMAL)}minScaleEvent(){logger.trace("Min scale event."),this.model&&this.model.startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_OUT,LAppDefine.PRIORITY_NORMAL)}tapEvent(e,t){return logger.trace("tapEvent view x:"+e+" y:"+t),!!this.model&&(this.model.hitTest(LAppDefine.HIT_AREA_HEAD,e,t)?(logger.trace("Tap face."),this.model.setRandomExpression()):this.model.hitTest(LAppDefine.HIT_AREA_BODY,e,t)&&(logger.trace("Tap body."),this.model.startRandomMotion(LAppDefine.MOTION_GROUP_TAP_BODY,LAppDefine.PRIORITY_NORMAL)),!0)}}export default LAppLive2DManager;