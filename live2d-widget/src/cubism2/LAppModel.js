import{L2DBaseModel,Live2DFramework,L2DEyeBlink}from"./Live2DFramework.js";import ModelSettingJson from"./utils/ModelSettingJson.js";import LAppDefine from"./LAppDefine.js";import MatrixStack from"./utils/MatrixStack.js";import logger from"../logger.js";class LAppModel extends L2DBaseModel{constructor(){super(),this.modelHomeDir="",this.modelSetting=null,this.tmpMatrix=[]}loadJSON(t){const e=this.modelHomeDir+this.modelSetting.getModelFile();this.loadModelData(e,e=>{for(let e=0;e<this.modelSetting.getTextureNum();e++){const i=this.modelHomeDir+this.modelSetting.getTextureFile(e);this.loadTexture(e,i,()=>{if(this.isTexLoaded){if(this.modelSetting.getExpressionNum()>0){this.expressions={};for(let t=0;t<this.modelSetting.getExpressionNum();t++){const e=this.modelSetting.getExpressionName(t),i=this.modelHomeDir+this.modelSetting.getExpressionFile(t);this.loadExpression(e,i)}}else this.expressionManager=null,this.expressions={};if(null==this.eyeBlink&&(this.eyeBlink=new L2DEyeBlink),null!=this.modelSetting.getPhysicsFile()?this.loadPhysics(this.modelHomeDir+this.modelSetting.getPhysicsFile()):this.physics=null,null!=this.modelSetting.getPoseFile()?this.loadPose(this.modelHomeDir+this.modelSetting.getPoseFile(),()=>{this.pose.updateParam(this.live2DModel)}):this.pose=null,null!=this.modelSetting.getLayout()){const t=this.modelSetting.getLayout();null!=t.width&&this.modelMatrix.setWidth(t.width),null!=t.height&&this.modelMatrix.setHeight(t.height),null!=t.x&&this.modelMatrix.setX(t.x),null!=t.y&&this.modelMatrix.setY(t.y),null!=t.center_x&&this.modelMatrix.centerX(t.center_x),null!=t.center_y&&this.modelMatrix.centerY(t.center_y),null!=t.top&&this.modelMatrix.top(t.top),null!=t.bottom&&this.modelMatrix.bottom(t.bottom),null!=t.left&&this.modelMatrix.left(t.left),null!=t.right&&this.modelMatrix.right(t.right)}for(let t=0;t<this.modelSetting.getInitParamNum();t++)this.live2DModel.setParamFloat(this.modelSetting.getInitParamID(t),this.modelSetting.getInitParamValue(t));for(let t=0;t<this.modelSetting.getInitPartsVisibleNum();t++)this.live2DModel.setPartsOpacity(this.modelSetting.getInitPartsVisibleID(t),this.modelSetting.getInitPartsVisibleValue(t));this.live2DModel.saveParam(),this.preloadMotionGroup(LAppDefine.MOTION_GROUP_IDLE),this.mainMotionManager.stopAllMotions(),this.setUpdating(!1),this.setInitialized(!0),"function"==typeof t&&t()}})}})}async loadModelSetting(t,e){this.setUpdating(!0),this.setInitialized(!1),this.modelHomeDir=t.substring(0,t.lastIndexOf("/")+1),this.modelSetting=new ModelSettingJson,this.modelSetting.json=e,await new Promise(t=>this.loadJSON(t))}load(t,e,i){this.setUpdating(!0),this.setInitialized(!1),this.modelHomeDir=e.substring(0,e.lastIndexOf("/")+1),this.modelSetting=new ModelSettingJson,this.modelSetting.loadModelSetting(e,()=>{this.loadJSON(i)})}release(t){const e=Live2DFramework.getPlatformManager();t.deleteTexture(e.texture)}preloadMotionGroup(t){for(let e=0;e<this.modelSetting.getMotionNum(t);e++){const i=this.modelSetting.getMotionFile(t,e);this.loadMotion(i,this.modelHomeDir+i,i=>{i.setFadeIn(this.modelSetting.getMotionFadeIn(t,e)),i.setFadeOut(this.modelSetting.getMotionFadeOut(t,e))})}}update(){if(null==this.live2DModel)return void logger.error("Failed to update.");const t=2*((UtSystem.getUserTimeMSec()-this.startTimeMSec)/1e3)*Math.PI;this.mainMotionManager.isFinished()&&this.startRandomMotion(LAppDefine.MOTION_GROUP_IDLE,LAppDefine.PRIORITY_IDLE),this.live2DModel.loadParam();this.mainMotionManager.updateParam(this.live2DModel)||null!=this.eyeBlink&&this.eyeBlink.updateParam(this.live2DModel),this.live2DModel.saveParam(),null==this.expressionManager||null==this.expressions||this.expressionManager.isFinished()||this.expressionManager.updateParam(this.live2DModel),this.live2DModel.addToParamFloat("PARAM_ANGLE_X",30*this.dragX,1),this.live2DModel.addToParamFloat("PARAM_ANGLE_Y",30*this.dragY,1),this.live2DModel.addToParamFloat("PARAM_ANGLE_Z",this.dragX*this.dragY*-30,1),this.live2DModel.addToParamFloat("PARAM_BODY_ANGLE_X",10*this.dragX,1),this.live2DModel.addToParamFloat("PARAM_EYE_BALL_X",this.dragX,1),this.live2DModel.addToParamFloat("PARAM_EYE_BALL_Y",this.dragY,1),this.live2DModel.addToParamFloat("PARAM_ANGLE_X",Number(15*Math.sin(t/6.5345)),.5),this.live2DModel.addToParamFloat("PARAM_ANGLE_Y",Number(8*Math.sin(t/3.5345)),.5),this.live2DModel.addToParamFloat("PARAM_ANGLE_Z",Number(10*Math.sin(t/5.5345)),.5),this.live2DModel.addToParamFloat("PARAM_BODY_ANGLE_X",Number(4*Math.sin(t/15.5345)),.5),this.live2DModel.setParamFloat("PARAM_BREATH",Number(.5+.5*Math.sin(t/3.2345)),1),null!=this.physics&&this.physics.updateParam(this.live2DModel),null==this.lipSync&&this.live2DModel.setParamFloat("PARAM_MOUTH_OPEN_Y",this.lipSyncValue),null!=this.pose&&this.pose.updateParam(this.live2DModel),this.live2DModel.update()}setRandomExpression(){const t=[];for(const e in this.expressions)t.push(e);const e=parseInt(Math.random()*t.length);this.setExpression(t[e])}startRandomMotion(t,e){const i=this.modelSetting.getMotionNum(t),o=parseInt(Math.random()*i);this.startMotion(t,o,e)}startMotion(t,e,i){const o=this.modelSetting.getMotionFile(t,e);if(null==o||""==o)return;if(i==LAppDefine.PRIORITY_FORCE)this.mainMotionManager.setReservePriority(i);else if(!this.mainMotionManager.reserveMotion(i))return void logger.trace("Motion is running.");let s;null==this.motions[t]?this.loadMotion(null,this.modelHomeDir+o,o=>{s=o,this.setFadeInFadeOut(t,e,i,s)}):(s=this.motions[t],this.setFadeInFadeOut(t,e,i,s))}setFadeInFadeOut(t,e,i,o){const s=this.modelSetting.getMotionFile(t,e);if(o.setFadeIn(this.modelSetting.getMotionFadeIn(t,e)),o.setFadeOut(this.modelSetting.getMotionFadeOut(t,e)),logger.trace("Start motion : "+s),null==this.modelSetting.getMotionSound(t,e))this.mainMotionManager.startMotionPrio(o,i);else{const s=this.modelSetting.getMotionSound(t,e),l=document.createElement("audio");l.src=this.modelHomeDir+s,logger.trace("Start sound : "+s),l.play(),this.mainMotionManager.startMotionPrio(o,i)}}setExpression(t){const e=this.expressions[t];logger.trace("Expression : "+t),this.expressionManager?.startMotion(e,!1)}draw(t){MatrixStack.push(),MatrixStack.multMatrix(this.modelMatrix.getArray()),this.tmpMatrix=MatrixStack.getMatrix(),this.live2DModel.setMatrix(this.tmpMatrix),this.live2DModel.draw(),MatrixStack.pop()}hitTest(t,e,i){const o=this.modelSetting.getHitAreaNum();if(0==o){const o=this.modelSetting.getHitAreaCustom();if(o){const s=o[t+"_x"],l=o[t+"_y"];if(e>Math.min(...s)&&e<Math.max(...s)&&i>Math.min(...l)&&i<Math.max(...l))return!0}}for(let s=0;s<o;s++)if(t==this.modelSetting.getHitAreaName(s)){const t=this.modelSetting.getHitAreaID(s);return this.hitTestSimple(t,e,i)}return!1}}export default LAppModel;